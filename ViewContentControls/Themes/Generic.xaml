<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ViewContentControls">

    <Style TargetType="{x:Type local:ViewContent}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ViewContent}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="hor"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" x:Name="ver"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>


                        <ScrollViewer x:Name="ccHor" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" IsTabStop="False"
                                      VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Auto">
                            <ContentControl Content="{TemplateBinding ControlsContent}" IsTabStop="False"/>
                        </ScrollViewer >

                        <ScrollViewer x:Name="ccVer" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" IsTabStop="False"
                                      VerticalScrollBarVisibility="Auto">
                            <ContentControl Content="{TemplateBinding ControlsContent}" IsTabStop="False"/>
                        </ScrollViewer>

                        <ScrollViewer Grid.Row="1" Grid.Column="1" VerticalScrollBarVisibility="Auto" IsTabStop="False">
                            <ContentControl Content="{TemplateBinding Content}" IsTabStop="False"/>
                        </ScrollViewer>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="ControlsOrientation" Value="Horizontal">
                            <Setter TargetName="ccHor" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ccVer" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ControlsOrientation" Value="Vertical">
                            <Setter TargetName="ccHor" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ccVer" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ViewContentSection}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ViewContentSection}">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="1"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsOpen, Mode=TwoWay}"
                                          Margin="10,0,0,0"
                                          Name="toggle">

                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Style.Setters>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Control, Mode=FindAncestor, AncestorLevel=1}}"/>
                                            <Setter Property="Width" Value="35"/>
                                            <Setter Property="HorizontalAlignment" Value="Left"/>

                                            <Setter Property="Template">

                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Grid Background="{TemplateBinding Background}">
                                                            <Path RenderTransformOrigin="0.5, 0.5" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                  Data="m24 30-10-9.95h20Z" Stretch="Uniform"
                                                                  Fill="{TemplateBinding Foreground}">
                                                                <Path.RenderTransform>
                                                                    <RotateTransform Angle="180" x:Name="rotate"/>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Grid>

                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Trigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard Storyboard.TargetName="rotate" 
                                                                                    Storyboard.TargetProperty="(RotateTransform.Angle)">
                                                                            <DoubleAnimation To="180" Duration="0:0:0.2" AutoReverse="False"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.EnterActions>
                                                                <Trigger.ExitActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard Storyboard.TargetName="rotate" 
                                                                                    Storyboard.TargetProperty="(RotateTransform.Angle)">
                                                                            <DoubleAnimation To="0" Duration="0:0:0.2" AutoReverse="False"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.ExitActions>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style.Setters>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>

                            <TextBlock Grid.Row="0" Grid.Column="1" Text="{TemplateBinding Header}" HorizontalAlignment="Left" Margin="10,0"
                                       FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}"
                                       Foreground="{TemplateBinding Foreground}"/>

                            <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                                       Fill="{TemplateBinding Background}"/>
                        </Grid>

                        <ContentControl Grid.Row="1" Grid.Column="1" Content="{TemplateBinding Content}" IsTabStop="False"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="CollapseButtonVisible" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="toggle"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ViewContentSectionItem}">

        <Setter Property="BorderBrush" Value="Transparent"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ViewContentSectionItem}">

                    <Border BorderBrush="{TemplateBinding ErrorBorderColorBrush}"
                            x:Name="border" BorderThickness="1" Margin="5">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>


                            <Grid Grid.Row="0" Margin="0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" Text="{TemplateBinding Header}" Margin="5" TextWrapping="Wrap"
                                           FontSize="{TemplateBinding HeaderFontSize}" FontFamily="{TemplateBinding FontFamily}"
                                           FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}"/>

                                <ContentControl Grid.Column="1" Content="{TemplateBinding Content}" IsTabStop="False"/>

                            </Grid>

                            <TextBlock Grid.Row="1" Text="{TemplateBinding ErrorText}" Margin="5,10" x:Name="errorText"
                                       FontSize="{TemplateBinding ErrorTextFontSize}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}"
                                       Foreground="{TemplateBinding ErrorTextColorBrush}" Visibility="Collapsed" HorizontalAlignment="Center"/>
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsErrorTextVisible" Value="True">
                            <Setter TargetName="errorText" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsErrorTextVisible" Value="False">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>