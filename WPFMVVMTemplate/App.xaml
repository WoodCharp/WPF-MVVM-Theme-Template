<Application x:Class="WPFMVVMTemplate.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WPFMVVMTemplate"
             xmlns:theme="clr-namespace:WPFMVVMTemplate.Themes"
             Startup="Application_Startup">
    
    <Application.Resources>


        <ResourceDictionary>

            <!--This contains all colors of the current theme-->
            <!--How to get color-->
            <!--{Binding WindowBackgroundBrush, Source={StaticResource Theme}}-->
            <theme:ThemeViewModel x:Key="Theme"/>

            <!--Add here all TTF font files-->
            <!--<FontFamily x:Key="Font_Reqular">/MyAwesomeApplicationName;Component/Fonts/FontFile.ttf#FontName</FontFamily>-->
            
            
            <!--Add all styles here. Do not place them in merged dictionaries-->
            <!--If those are placed to mergerd dictionaries and style uses theme colors there will be 'theme color not found' error-->
            <Style TargetType="{x:Type Button}"
                   x:Key="WindowControlButton">

                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{Binding ForegroundDisabledBrush, Source={StaticResource Theme}}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{Binding ForegroundHoverBrush, Source={StaticResource Theme}}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground" Value="{Binding ForegroundPressedBrush, Source={StaticResource Theme}}"/>
                    </Trigger>
                </Style.Triggers>

                <Style.Setters>

                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{Binding ForegroundBrush, Source={StaticResource Theme}}"/>

                    <Setter Property="Height" Value="Auto"/>
                    <Setter Property="Width" Value="Auto"/>

                    <Setter Property="FontWeight" Value="Bold"/>

                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">

                                <Grid>
                                    <Border Background="{TemplateBinding Background}"
                                            RenderTransformOrigin="0.5, 0.5"
                                            Name="border">

                                        <Border.RenderTransform>
                                            <ScaleTransform x:Name="BorderScaleTransform"/>
                                        </Border.RenderTransform>

                                        <ContentPresenter Content="{TemplateBinding Content}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                    </Border>
                                </Grid>

                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>

            <Style TargetType="{x:Type ResizeGrip}">
                
                <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                
                <Setter Property="Background" Value="Transparent"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ResizeGrip}">
                            <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                                <Path Fill="{Binding ForegroundBrush, Source={StaticResource Theme}}" HorizontalAlignment="Right" Margin="0,0,2,2" VerticalAlignment="Bottom"
                                      Data="M 8,0 L 10,0 L 10,2 L 8,2 Z M 4,4 L 6,4 L 6,6 L 4,6 Z M 8,4 L 10,4 L 10,6 L 8,6 Z M 0,8 L 2,8 L 2,10 L 0,10 Z M 4,8 L 6,8 L 6,10 L 4,10 Z M 8,8 L 10,8 L 10,10 L 8,10 Z"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ResourceDictionary.MergedDictionaries>
                
                <!--Add here all custom control libraries-->
                <!--<ResourceDictionary  Source="pack://application:,,,/MyCustomControlLibraryName;component/Themes/Generic.xaml"/>-->
                
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
